// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   	ViewModel.tt
// Version:		2.0
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Input;
using Controls = WPAppStudio.Controls;
using Entities = WPAppStudio.Entities;
using EntitiesBase = WPAppStudio.Entities.Base;
using IServices = WPAppStudio.Services.Interfaces;
using IViewModels = WPAppStudio.ViewModel.Interfaces;
using Localization = WPAppStudio.Localization;
using Repositories = WPAppStudio.Repositories;
using Services = WPAppStudio.Services;
using ViewModelsBase = WPAppStudio.ViewModel.Base;
using WPAppStudio;
using WPAppStudio.Shared;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of intheaters_News ViewModel.
    /// </summary>
    [CompilerGenerated]
    [GeneratedCode("Radarc", "4.0")]
    public partial class intheaters_NewsViewModel : ViewModelsBase.VMBase, IViewModels.Iintheaters_NewsViewModel
    {       

		private readonly IServices.IDialogService _dialogService;
		private readonly IServices.INavigationService _navigationService;
		private readonly Repositories.Iintheaters_openingMoviesDataSource _intheaters_openingMoviesDataSource;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="intheaters_NewsViewModel" /> class.
        /// </summary>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="intheaters_openingMoviesDataSource">The Intheaters_opening Movies Data Source.</param>
        public intheaters_NewsViewModel(IServices.IDialogService dialogService, IServices.INavigationService navigationService, Repositories.Iintheaters_openingMoviesDataSource intheaters_openingMoviesDataSource)
        {
			_dialogService = dialogService;
			_navigationService = navigationService;
			_intheaters_openingMoviesDataSource = intheaters_openingMoviesDataSource;
        }
		
	
		private ObservableCollection<EntitiesBase.RssSearchResult> _intheaters_NewsListControlCollection;

        /// <summary>
        /// Intheaters_NewsListControlCollection property.
        /// </summary>		
        public ObservableCollection<EntitiesBase.RssSearchResult> Intheaters_NewsListControlCollection
        {
            get
            {
				
                if(_intheaters_NewsListControlCollection == null)
					Getintheaters_NewsListControlCollectionData();
				return _intheaters_NewsListControlCollection;     
            }
            set
            {
                SetProperty(ref _intheaters_NewsListControlCollection, value);
            }
        }
	
		private EntitiesBase.RssSearchResult _selectedintheaters_NewsListControlCollection;

        /// <summary>
        /// Selectedintheaters_NewsListControlCollection property.
        /// </summary>		
        public EntitiesBase.RssSearchResult Selectedintheaters_NewsListControlCollection
        {
            get
            {
				return _selectedintheaters_NewsListControlCollection;
            }
            set
            {
                _selectedintheaters_NewsListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IViewModels.Iintheaters_DetailViewModel>(_selectedintheaters_NewsListControlCollection);
            }
        }
	    /// <summary>
        /// IsInternetAvailable property.
        /// </summary>		
        public override Visibility IsInternetAvailable
        {
	      get
          {
				return Visibility.Collapsed; 
           }
		}

        /// <summary>
        /// Delegate method for the Refreshintheaters_NewsListControlCollectionCommand command.
        /// </summary>
        public async void Refreshintheaters_NewsListControlCollectionCommandDelegate() 
        {
			try
			{
				LoadingIntheaters_NewsListControlCollection = true;
				var items = await  _intheaters_openingMoviesDataSource.Refresh();
				Intheaters_NewsListControlCollection = items;
			}
            catch (Exception ex)
            {
				Intheaters_NewsListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.rssError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingIntheaters_NewsListControlCollection = false;
			}
        }
		
		
        private bool _loadingIntheaters_NewsListControlCollection;
		
        public bool LoadingIntheaters_NewsListControlCollection
        {
            get { return _loadingIntheaters_NewsListControlCollection; }
            set { SetProperty(ref _loadingIntheaters_NewsListControlCollection, value); }
        }

        private ICommand _refreshintheaters_NewsListControlCollectionCommand;

        /// <summary>
        /// Gets the Refreshintheaters_NewsListControlCollectionCommand command.
        /// </summary>
        public ICommand Refreshintheaters_NewsListControlCollectionCommand
        {
            get { return _refreshintheaters_NewsListControlCollectionCommand = _refreshintheaters_NewsListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand(Refreshintheaters_NewsListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the Getintheaters_NewsListControlCollectionCommand command.
        /// </summary>
        public  void Getintheaters_NewsListControlCollectionCommandDelegate(int pageNumber= 0) 
        {
				Getintheaters_NewsListControlCollectionData(pageNumber);
        }
		

        private ICommand _getintheaters_NewsListControlCollectionCommand;

        /// <summary>
        /// Gets the Getintheaters_NewsListControlCollectionCommand command.
        /// </summary>
        public ICommand Getintheaters_NewsListControlCollectionCommand
        {
            get { return _getintheaters_NewsListControlCollectionCommand = _getintheaters_NewsListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand<int>(Getintheaters_NewsListControlCollectionCommandDelegate); }
        }

        private async void Getintheaters_NewsListControlCollectionData(int pageNumber = 0)
        {
	
			try
			{
				LoadingIntheaters_NewsListControlCollection = true;
			
				var items = await _intheaters_openingMoviesDataSource.GetData();
                Intheaters_NewsListControlCollection = items;
			}
            catch (Exception ex)
            {
				Intheaters_NewsListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.rssError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingIntheaters_NewsListControlCollection = false;
			}
		}
    }
}
